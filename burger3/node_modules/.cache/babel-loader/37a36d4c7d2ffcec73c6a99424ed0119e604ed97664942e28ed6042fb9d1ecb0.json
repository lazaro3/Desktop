{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-df0ba1dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nome\"\n}, \"Nome do cliente\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"input -container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"pao\"\n}, \"Escolha o pao\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Selecione o seu pao\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"input-container\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"carne\"\n}, \"Escolha a carne do Burger\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Selecione o seu pao\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  id: \"opcionais-container\",\n  class: \"input-container\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  id: \"opcionais-title\",\n  for: \"opcionais\"\n}, \"Selicione os opcionais:\", -1 /* HOISTED */));\nconst _hoisted_12 = [\"value\"];\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-container\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  class: \"submit-btn\",\n  value: \"criar meu burger\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_message = _resolveComponent(\"message\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createVNode(_component_message, {\n    msg: $data.msg\n  }, null, 8 /* PROPS */, [\"msg\"]), [[_vShow, $data.msg]]), _createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    id: \"burger-form\",\n    onSubmit: _cache[4] || (_cache[4] = (...args) => $options.createBurger && $options.createBurger(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"nome\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nome = $event),\n    name: \"nome\",\n    placeholder: \"Digite o seu nome\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nome]])]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    name: \"pao\",\n    id: \"pao\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.pao = $event)\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.paes, pao => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: pao.id,\n      value: pao.tipo\n    }, _toDisplayString(pao.tipo), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.pao]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"select\", {\n    name: \"carne\",\n    id: \"carne\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.carne = $event)\n  }, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.carnes, carne => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: carne.id,\n      value: \"carne.tipo\"\n    }, _toDisplayString(carne.tipo), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.carne]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.opcionaisdata, opcional => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"checkbox-container\",\n      key: opcional.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      name: \"opcionais\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.opcionais = $event),\n      value: opcional.tipo\n    }, null, 8 /* PROPS */, _hoisted_12), [[_vModelCheckbox, $data.opcionais]]), _createElementVNode(\"span\", null, _toDisplayString(opcional.tipo), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_13], 32 /* HYDRATE_EVENTS */)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","value","id","type","_createElementBlock","_createVNode","_component_message","msg","$data","onSubmit","_cache","args","$options","createBurger","_hoisted_1","_hoisted_2","nome","$event","name","placeholder","_hoisted_3","_hoisted_4","pao","_hoisted_5","_Fragment","_renderList","paes","key","tipo","_hoisted_6","_hoisted_7","_hoisted_8","_ctx","carne","_hoisted_9","carnes","_hoisted_10","_hoisted_11","opcionaisdata","opcional","opcionais","_toDisplayString","_hoisted_13"],"sources":["C:\\Users\\Lazaro Dev\\Desktop\\burger3\\src\\BurgerForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <message :msg=\"msg\" v-show=\"msg\" />\r\n        <div>\r\n            <form id=\"burger-form\" @submit=\"createBurger\">\r\n                <div class=\"input-container\">\r\n                    <label for=\"nome\">Nome do cliente</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nome\"\r\n                        v-model=\"nome\"\r\n                        name=\"nome\"\r\n                        placeholder=\"Digite o seu nome\"\r\n                    />\r\n                </div>\r\n                <div class=\"input -container\">\r\n                    <label for=\"pao\">Escolha o pao</label\r\n                    ><select name=\"pao\" id=\"pao\" v-model=\"pao\">\r\n                        <option value=\"\">Selecione o seu pao</option>\r\n                        <option\r\n                            v-for=\"pao in paes\"\r\n                            :key=\"pao.id\"\r\n                            :value=\"pao.tipo\"\r\n                        >\r\n                            {{ pao.tipo }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"input-container\">\r\n                    <label for=\"carne\">Escolha a carne do Burger</label>\r\n                    <select name=\"carne\" id=\"carne\" v-model=\"carne\">\r\n                        <option value=\"\">Selecione o seu pao</option>\r\n                        <option\r\n                            v-for=\"carne in carnes\"\r\n                            :key=\"carne.id\"\r\n                            value=\"carne.tipo\"\r\n                        >\r\n                            {{ carne.tipo }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div id=\"opcionais-container\" class=\"input-container\">\r\n                    <label id=\"opcionais-title\" for=\"opcionais\"\r\n                        >Selicione os opcionais:</label\r\n                    >\r\n                    <div\r\n                        class=\"checkbox-container\"\r\n                        v-for=\"opcional in opcionaisdata\"\r\n                        :key=\"opcional.id\"\r\n                    >\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"opcionais\"\r\n                            v-model=\"opcionais\"\r\n                            :value=\"opcional.tipo\"\r\n                        /><span>{{ opcional.tipo }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"input-container\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        class=\"submit-btn\"\r\n                        value=\"criar meu burger\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from \"./components/Message.vue\";\r\n// import Message from \"./Message.vue\";\r\nexport default {\r\n    name: \"BurgerForm\",\r\n    data() {\r\n        return {\r\n            paes: null,\r\n            carnes: null,\r\n            opcionaisdata: null,\r\n            nome: null,\r\n            pao: null,\r\n            opcionais: [],\r\n            status: \"solicitado\",\r\n            msg: null,\r\n        };\r\n    },\r\n    methods: {\r\n        async getIngredientes() {\r\n            const req = await fetch(\"http://localhost:3000/ingredientes\");\r\n            const data = await req.json();\r\n\r\n            this.paes = data.paes;\r\n            this.carnes = data.carnes;\r\n            this.opcionaisdata = data.opcionais;\r\n        },\r\n        async createBurger(e) {\r\n            e.preventDefault();\r\n\r\n            const data = {\r\n                nome: this.nome,\r\n                carne: this.carne,\r\n                pao: this.pao,\r\n                opcionais: Array.from(this.opcionais),\r\n                status: \"Solicitado\",\r\n            };\r\n\r\n            const dataJson = JSON.stringify(data);\r\n\r\n            const req = await fetch(\" http://localhost:3000/burgers\", {\r\n                method: \"POST\",\r\n                headers: { \"content-type\": \"application/json\" },\r\n                body: dataJson,\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            //colocar uma mensagem do sistema\r\n            this.msg = `Pedido numero ${res.id} realizado com sucesso`;\r\n\r\n            //Limpar Msg\r\n            setTimeout(() => (this.msg = \"\"), 3000);\r\n\r\n            //Limpar os campos\r\n            this.nome = \" \";\r\n            this.carne = \" \";\r\n            this.pao = \" \";\r\n            this.opcionais = \" \";\r\n\r\n            // console.log(res);\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getIngredientes();\r\n    },\r\n\r\n    components: {\r\n        Message,\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#burger-form {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n}\r\n.input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n    color: #222;\r\n    padding: 5px 10px;\r\n    border-left: 4px solid #fcba03;\r\n}\r\n\r\ninput,\r\nselect {\r\n    padding: 5px 10px;\r\n    width: 300px;\r\n}\r\n\r\n#opcionais-container {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n#opcionais-title {\r\n    width: 100%;\r\n}\r\n\r\n.checkbox-container {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.checkbox-container span,\r\n.checkbox-container input {\r\n    width: auto;\r\n}\r\n\r\n.checkbox-container span {\r\n    margin-left: 6px;\r\n    font-weight: bold;\r\n}\r\n\r\n.submit-btn {\r\n    background-color: #222;\r\n    color: #fcba03;\r\n    font-weight: bold;\r\n    border: 2px solid #222;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    /* margin: 0 auto; */\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n}\r\n\r\n.submit-btn:hover {\r\n    background-color: transparent;\r\n    color: #222;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}