{"ast":null,"code":"import Message from \"./components/Message.vue\";\n// import Message from \"./Message.vue\";\nexport default {\n  name: \"BurgerForm\",\n  data() {\n    return {\n      paes: null,\n      carnes: null,\n      opcionaisdata: null,\n      nome: null,\n      pao: null,\n      carne: null,\n      opcionais: [],\n      status: \"solicitado\",\n      msg: null\n    };\n  },\n  methods: {\n    async getIngredientes() {\n      const req = await fetch(\"http://localhost:3000/ingredientes\");\n      const data = await req.json();\n      this.paes = data.paes;\n      this.carnes = data.carnes;\n      this.opcionaisdata = data.opcionais;\n    },\n    async createBurger(e) {\n      e.preventDefault();\n      const data = {\n        nome: this.nome,\n        carne: this.carne,\n        pao: this.pao,\n        opcionais: Array.from(this.opcionais),\n        status: \"Solicitado\"\n      };\n      const dataJson = JSON.stringify(data);\n      const req = await fetch(\" http://localhost:3000/burgers\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n\n      //colocar uma mensagem do sistema\n      this.msg = `Pedido numero ${res.id} realizado com sucesso`;\n\n      //Limpar Msg\n      setTimeout(() => this.msg = \"\", 3000);\n\n      //Limpar os campos\n      this.nome = \" \";\n      this.carne = \" \";\n      this.pao = \" \";\n      this.opcionais = \" \";\n\n      // console.log(res);\n    }\n  },\n\n  mounted() {\n    this.getIngredientes();\n  },\n  components: {\n    Message\n  }\n};","map":{"version":3,"names":["Message","name","data","paes","carnes","opcionaisdata","nome","pao","carne","opcionais","status","msg","methods","getIngredientes","req","fetch","json","createBurger","e","preventDefault","Array","from","dataJson","JSON","stringify","method","headers","body","res","id","setTimeout","mounted","components"],"sources":["C:\\Users\\Lazaro Dev\\Desktop\\burger3\\src\\BurgerForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <message :msg=\"msg\" v-show=\"msg\" />\r\n        <div>\r\n            <form id=\"burger-form\" @submit=\"createBurger\">\r\n                <div class=\"input-container\">\r\n                    <label for=\"nome\">Nome do cliente</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nome\"\r\n                        v-model=\"nome\"\r\n                        name=\"nome\"\r\n                        placeholder=\"Digite o seu nome\"\r\n                    />\r\n                </div>\r\n                <div class=\"input -container\">\r\n                    <label for=\"pao\">Escolha o pao</label ><select name=\"pao\" id=\"pao\" v-model=\"pao\">\r\n                        <option value=\"\">Selecione o seu pao</option>\r\n                        <option v-for=\"pao in paes\" :key=\"pao.id\" :value=\"pao.tipo\" >\r\n                        {{ pao.tipo }}\r\n                 </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"input-container\">\r\n                    <label for=\"carne\">Escolha a carne do Burger</label>\r\n                    <select name=\"carne\" id=\"carne\" v-model=\"carne\">\r\n                        <option value=\"\">Selecione o seu pao</option>\r\n                        <option\r\n                            v-for=\"carne in carnes\"\r\n                            :key=\"carne.id\"\r\n                            :value=\"carne.tipo\"\r\n                        >\r\n                            {{ carne.tipo }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div id=\"opcionais-container\" class=\"input-container\">\r\n                    <label id=\"opcionais-title\" for=\"opcionais\"\r\n                        >Selicione os opcionais:</label\r\n                    >\r\n                    <div\r\n                        class=\"checkbox-container\"\r\n                        v-for=\"opcional in opcionaisdata\"\r\n                        :key=\"opcional.id\"\r\n                    >\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"opcionais\"\r\n                            v-model=\"opcionais\"\r\n                            :value=\"opcional.tipo\"\r\n                        /><span>{{ opcional.tipo }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"input-container\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        class=\"submit-btn\"\r\n                        value=\"criar meu burger\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Message from \"./components/Message.vue\";\r\n// import Message from \"./Message.vue\";\r\nexport default {\r\n    name: \"BurgerForm\",\r\n    data() {\r\n        return {\r\n            paes: null,\r\n            carnes: null,\r\n            opcionaisdata: null,\r\n            nome: null,\r\n            pao: null,\r\n            carne: null,\r\n            opcionais: [],\r\n            status: \"solicitado\",\r\n            msg: null,\r\n        };\r\n    },\r\n    methods: {\r\n        async getIngredientes() {\r\n            const req = await fetch(\"http://localhost:3000/ingredientes\");\r\n            const data = await req.json();\r\n\r\n            this.paes = data.paes;\r\n            this.carnes = data.carnes;\r\n            this.opcionaisdata = data.opcionais;\r\n        },\r\n        async createBurger(e) {\r\n            e.preventDefault();\r\n\r\n            const data = {\r\n                nome: this.nome,\r\n                carne: this.carne,\r\n                pao: this.pao,\r\n                opcionais: Array.from(this.opcionais),\r\n                status: \"Solicitado\",\r\n            };\r\n\r\n            const dataJson = JSON.stringify(data);\r\n\r\n            const req = await fetch(\" http://localhost:3000/burgers\", {\r\n                method: \"POST\",\r\n                headers: { \"content-type\": \"application/json\" },\r\n                body: dataJson,\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            //colocar uma mensagem do sistema\r\n            this.msg = `Pedido numero ${res.id} realizado com sucesso`;\r\n\r\n            //Limpar Msg\r\n            setTimeout(() => (this.msg = \"\"), 3000);\r\n\r\n            //Limpar os campos\r\n            this.nome = \" \";\r\n            this.carne = \" \";\r\n            this.pao = \" \";\r\n            this.opcionais = \" \";\r\n\r\n            // console.log(res);\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getIngredientes();\r\n    },\r\n\r\n    components: {\r\n        Message,\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#burger-form {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n}\r\n.input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-bottom: 15px;\r\n    color: #222;\r\n    padding: 5px 10px;\r\n    border-left: 4px solid #fcba03;\r\n}\r\n\r\ninput,\r\nselect {\r\n    padding: 5px 10px;\r\n    width: 300px;\r\n}\r\n\r\n#opcionais-container {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n#opcionais-title {\r\n    width: 100%;\r\n}\r\n\r\n.checkbox-container {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    width: 50%;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.checkbox-container span,\r\n.checkbox-container input {\r\n    width: auto;\r\n}\r\n\r\n.checkbox-container span {\r\n    margin-left: 6px;\r\n    font-weight: bold;\r\n}\r\n\r\n.submit-btn {\r\n    background-color: #222;\r\n    color: #fcba03;\r\n    font-weight: bold;\r\n    border: 2px solid #222;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    /* margin: 0 auto; */\r\n    cursor: pointer;\r\n    transition: 0.5s;\r\n}\r\n\r\n.submit-btn:hover {\r\n    background-color: transparent;\r\n    color: #222;\r\n}\r\n</style>\r\n"],"mappings":"AAkEA,OAAOA,OAAM,MAAO,0BAA0B;AAC9C;AACA,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZC,aAAa,EAAE,IAAI;MACnBC,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,IAAI;MACTC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,YAAY;MACpBC,GAAG,EAAE;IACT,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,eAAeA,CAAA,EAAG;MACpB,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAC7D,MAAMb,IAAG,GAAI,MAAMY,GAAG,CAACE,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACb,IAAG,GAAID,IAAI,CAACC,IAAI;MACrB,IAAI,CAACC,MAAK,GAAIF,IAAI,CAACE,MAAM;MACzB,IAAI,CAACC,aAAY,GAAIH,IAAI,CAACO,SAAS;IACvC,CAAC;IACD,MAAMQ,YAAYA,CAACC,CAAC,EAAE;MAClBA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,MAAMjB,IAAG,GAAI;QACTI,IAAI,EAAE,IAAI,CAACA,IAAI;QACfE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBD,GAAG,EAAE,IAAI,CAACA,GAAG;QACbE,SAAS,EAAEW,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,SAAS,CAAC;QACrCC,MAAM,EAAE;MACZ,CAAC;MAED,MAAMY,QAAO,GAAIC,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC;MAErC,MAAMY,GAAE,GAAI,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACtDU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEL;MACV,CAAC,CAAC;MAEF,MAAMM,GAAE,GAAI,MAAMd,GAAG,CAACE,IAAI,CAAC,CAAC;;MAE5B;MACA,IAAI,CAACL,GAAE,GAAK,iBAAgBiB,GAAG,CAACC,EAAE,wBAAwB;;MAE1D;MACAC,UAAU,CAAC,MAAO,IAAI,CAACnB,GAAE,GAAI,EAAG,EAAE,IAAI,CAAC;;MAEvC;MACA,IAAI,CAACL,IAAG,GAAI,GAAG;MACf,IAAI,CAACE,KAAI,GAAI,GAAG;MAChB,IAAI,CAACD,GAAE,GAAI,GAAG;MACd,IAAI,CAACE,SAAQ,GAAI,GAAG;;MAEpB;IACJ;EACJ,CAAC;;EACDsB,OAAOA,CAAA,EAAG;IACN,IAAI,CAAClB,eAAe,CAAC,CAAC;EAC1B,CAAC;EAEDmB,UAAU,EAAE;IACRhC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}